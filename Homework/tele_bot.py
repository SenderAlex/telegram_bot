# https://t.me/exam_test23_bot

import asyncio
from aiogram import F
from aiogram import types
from aiogram.filters import StateFilter, Command
from aiogram.types import InputFile, Message
from Homework.config.config import *
from Homework.keyboards.keyboard import generate_student_markup, generate_admin_markup, admin_menu
from Homework.handlers.questions import add_question, edit_question, delete_question
from Homework.bd_handlers.tests.find_test_subjects import find_subjects
from Homework.quiz import viktorina


@router.message(Command(commands=['start']))  # [2]
async def command_start(message: Message):
    if message.from_user.id == admin:
        admin_mark_up = await generate_admin_markup(await find_subjects(), 1)
        await message.answer(text=f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {message.from_user.first_name}!!! –í—ã –∑–∞—à–ª–∏ –≤ —Å–∏—Å—Ç–µ–º—É –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
                             reply_markup=admin_mark_up.as_markup())
    else:
        student_mark_up = await generate_student_markup(await find_subjects(), 1)
        await message.answer(
            text=f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {message.from_user.first_name}!!! –í—ã –∑–∞—à–ª–∏ –≤ —Å–∏—Å—Ç–µ–º—É –∫–∞–∫ —Å—Ç—É–¥–µ–Ω—Ç!! –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω–æ–π –∏–∑ '
                 f'–≤–∞—Ä–∏–∞–Ω—Ç–æ–≤, –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –Ω–∏–∂–µ —Ç–µ—Å—Ç–æ–≤', reply_markup=student_mark_up.as_markup())


@dp.callback_query(F.data == "admin")
async def command_admin(callback: types.CallbackQuery):
    if callback.from_user.id == admin:
        await callback.message.answer(text=f'{callback.from_user.first_name}, —Ç–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ'
                                           f' –¥–æ–±–∞–≤–ª—è—Ç—å/—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å/—É–¥–∞–ª—è—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∫–Ω–æ–ø–∫–∞–º–∏, —É–∫–∞–∑–∞–Ω–Ω—ã–º–∏ –Ω–∏–∂–µ üëá',
                                      reply_markup=admin_menu.as_markup())
    await callback.answer()


@dp.callback_query(F.data == "cancel_admin_menu")
async def send_random_value(callback: types.CallbackQuery):
    if callback.from_user.id == admin:
        admin_mark_up = await generate_admin_markup(await find_subjects(), 1)
        await callback.message.answer(text=f'{callback.from_user.first_name}, –í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ —Å–≤–æ–µ –¥–µ–π—Å—Ç–≤–∏—è –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç–µ—Å—å'
                                           f' –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', reply_markup=admin_mark_up.as_markup())
    await callback.answer()


async def main():
    dp.include_routers(router)
    await dp.start_polling(bot)

if __name__ == '__main__':
    asyncio.run(main())
